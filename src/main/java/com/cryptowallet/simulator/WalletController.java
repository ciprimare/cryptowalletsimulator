package com.cryptowallet.simulator;

import com.cryptowallet.simulator.model.wallet.Wallet;
import com.cryptowallet.simulator.service.WalletService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.Set;

@RestController
@RequestMapping(value = "/wallet")
public class WalletController {

    @Autowired
    WalletService walletService;

    /**
     * all crypto currencies from https://min-api.cryptocompare.com/data/blockchain/list
     *
     * @return a list with all crypto currencies symbols
     */
    @GetMapping(value = "/currencies")
    public ResponseEntity<Set<String>> listCryptoCurrencies() {
        return ResponseEntity
                .status(HttpStatus.OK)
                .body(walletService.getAllCryptoCurrencies());
    }

    // create a wallet
    /*
       Input: id(autogenerated value) friendlyName and initial values(currency and available amount in the wallet)
     */

    /**
     * return the list with all the existent wallets and corresponding entries in the wallet
     *
     * @return a set with all the wallets and the entries
     */
    @GetMapping(value = "/list")
    public ResponseEntity<Set<Wallet>> listWallets() {
        return ResponseEntity
                .status(HttpStatus.OK)
                .body(walletService.getAllWallets());
    }

    // get a wallet

    // update a wallet

    // delete a wallet

    // buy a currency
    /*
       Input: to wallet: from currency with amount i want to buy a currency
     */

    // transfer currencies between two wallets
    /*
       Input: from wallet: amount and currency, to wallet: currency
     */
}
